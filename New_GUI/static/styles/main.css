:root {
    --not-selected-color: #bd1e1e;
    --hover-color: #eaeaea;
    --selected-inner-shadow: inset 0px 4px 18px -8px #222;
    --selected-shadow: 12px 12px 24px -2px #000;
    --drop-shadow: 24px 24px 24px -2px #000;
    --selected-color: #ff9900;
    --dark-text: #444;
    --radio-font-size: 40px;
    --table-header-font-size:50px;
    --table-font-size:40px;

    --gold: #e9d500;
    --dark-gold:rgb(112, 105, 0);
    --silver: #d6d6d6;
    --dark-silver: #494947;
    --bronze: #e28813f8;
    --dark-bronze: #584831;
}

.leaderboard {
    width: fit-content;
    align-self: center;
    align-content: center;

    /*Code from https://stackoverflow.com/questions/3053205/how-create-table-only-using-div-tag-and-css */
    display: table-row;         
    width: auto;         
    background-color: #eee;         
    border: 1px solid var(--dark-silver);         
    border-spacing: 5px; /* cellspacing:poor IE support for  this */
    clear: both;
}

.div-table-row {
    display: table-row;
    width: auto;
    clear: both;
  }

.board {
    min-width: 80px;
    width: 200px;
    margin-left: -100px;

    /*from https://stackoverflow.com/questions/3053205/how-create-table-only-using-div-tag-and-css*/
    float: left; /* fix for  buggy browsers */
    display: table-column;         
    width: 200px;         
    background-color: #ccc;

    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    resize: vertical;
    overflow: auto;
}

#player1.board {
    border: 5px solid transparent;
    padding: .5rem;
    border-image-source: linear-gradient(to top left, var(--gold) 0%,var(--dark-gold) 100%); 
    border-image-slice: 5;

    background-image: linear-gradient(to bottom right, var(--gold) 0%, var(--dark-gold) 100%);
}


.header,
.score,
.kills,
.deaths {
    border: none;
    border-width: 0cm;
    border-color: transparent;

    text-align: center;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-size: 40px;
}

#player2.board {
    border: 5px solid transparent;
    padding: .5rem;
    border-image-source: linear-gradient(to bottom right, var(--silver) 0%, var(--dark-silver) 100%); 
    border-image-slice: 5;
    background-image: linear-gradient(to top left, var(--silver) 0%, var(--dark-silver) 100%);
}

#player2.header,
#player2.score,
#player2.kills,
#player2.deaths {
    font-size: 40px;
    background: -webkit-linear-gradient( #070707, #3a3a36);
    -webkit-background-clip: text;
    -webkit-text-fill-color: #444;
}

#player3.board {
    border: 5px solid transparent;
    padding: .5rem;
    border-image-source: linear-gradient(to bottom right, var(--bronze) 0%, var(--dark-bronze) 100%); 
    border-image-slice: 5;
    background-image: linear-gradient(to top left, var(--bronze) 0%, var(--dark-bronze) 100%);

}

#player3.header,
#player3.score,
#player3.kills,
#player3.deaths {
    font-size: 40px;
    background: -webkit-linear-gradient( #070707, #3a3a36);
    -webkit-background-clip: text;
    -webkit-text-fill-color: #444;
    border: none;
    border-color: transparent;
}

#player4 {
    color: white;
    background-color: transparent;
    background: none;
    font-size: 40px;
}


input {
    transition: 0.3s;
}

body {
  background: radial-gradient(circle, rgba(0,0,0,1) 30%, rgba(66,1,1,1) 100%);
}

.game {
    position: static;
    vertical-align: middle;
    align-self: center;
    width: 80%;
    top: calc(50% - attr(height) / 2);
    padding: 15px;
}

.header {
    font-family: Arial, Helvetica, sans-serif;
    text-transform: capitalize;
    font-size: var(--table-header-font-size);
}

td:not(.header) {
    align-items: center;
    align-content: center;
    font-family: Arial, Helvetica, sans-serif;
    text-transform: capitalize;
    text-align: center;
    font-size: var(--table-font-size);
    font-weight: 900;
}

.grid {
    border-width: 0px;
    background-color: transparent;
    border: none transparent;
    background: none;
}

.grid tr td {
    border-width: 0px;
    background-color: transparent;
    border: none transparent;
    background: none;
}

input[type=submit] {
    background-color: var(--not-selected-color);
    border: none;
    color: white;
    padding: 16px 32px;
    text-decoration: none;
    margin: 4px 2px;
    cursor: pointer;
    font-size: 50px;
    border-radius: 2px;
    box-shadow: var(--drop-shadow);
}
input[type=submit]:hover {
    background-color: var(--hover-color);
}
input[type=submit]:active {
    background-color: var(--selected-color);
}

.container input[type=radio] + h2 {
    color:var(--dark-text);
    font-size: var(--radio-font-size);
    background-color: white;
    margin: 4px 2px;
    padding: 16px 32px;
    border-radius: 2px;
    text-decoration: none;
    margin: 4px 2px;
    cursor: pointer;
    box-shadow: var(--drop-shadow);
}

.container input[type=radio]:hover + h2 {
    background-color: var(--hover-color);
    
}

.container input:checked + h2 {
    font-weight: 1000;
    color: var(--dark-text);
    background-color: var(--selected-color);
    box-shadow: var(--selected-shadow);
}

.container input:checked:hover + h2 {
    font-weight: 1000;
    color: var(--dark-text);
    background-color: var(--selected-color);
    box-shadow: var(--selected-shadow);
}

input[type=text] {
    font-size: 50px;
    text-align: center;
    border: none transparent;
    background: transparent;
    color: #fff;
    font-weight: bold;
    outline: none;
}
input[type=text]::selection {
    background: black;
    color: var(--selected-color);
}
input[type=text]:focus {
    font-weight: bolder;
    text-decoration: underline;
    text-underline-position: below;
    border: thick var(--selected-color);
    border-style: solid;
    border-color: var(--selected-color);
    border-top: none transparent;
    border-left: none transparent;
    border-right: none transparent;
    border-bottom: thick;
    color: var(--selected-color);
}

input[type=submit]:hover input[type=submit]:active {
    background-color: #fab700;
    color: rgb(61, 61, 61);
    box-shadow: var(--drop-shadow);
}

.readonly input[type=text] {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    font-size: 30px;
    text-align: center;
    width: fit-content;
    border: none transparent;
    background: transparent;
    color: #e1e1e1;
    font-weight: bold;
    outline: none;
    text-shadow: var(--drop-shadow);
    caret-color: transparent;
    cursor: default;
}

.readonly input[type=text]:focus {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    font-size: 30px;
    text-align: center;
    width: fit-content;
    text-decoration: none;
    border: none transparent;
    background: transparent;
    color: #e1e1e1;
    font-weight: bold;
    outline: none;
    text-shadow: var(--drop-shadow);
    caret-color: transparent;
    cursor: default;
}

.readonly label {
    color: #e1e1e1;
    font-size: var(--radio-font-size);
    text-shadow: var(--drop-shadow);
    text-align: center;
}

/* Below COde altered after being taken from :https://www.w3schools.com/howto/tryit.asp?filename=tryhow_css_custom_radio */


    /* The container */
.container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 20px;
    cursor: pointer;
    font-size: 22px;
    color: var(--not-selected-color);
    text-align: center;
    font-family: Impact, Charcoal, sans-serif;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    }
    
    /* Hide the browser's default radio button */
    .container input[type=radio] {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    }
    
    /* Create a custom radio button */
.checkmark {
    position: absolute;
    bottom: -5px;
    left: 0;
    height: 30px;
    width: 500px;
    background-color: var(--not-selected-color);
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
    background-color:var(--hover-color);
}
    
.container:hover {
        color: var(--hover-color);
}
    
    .container:has(input:checked) {
    color: var(--selected-color);
    }
    
    /* When the radio button is checked, add a blue background */
.container input:checked ~ .checkmark {
    background-color: var(--selected-color);
}
    
    /* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}
    
    /* Show the indicator (dot/circle) when checked */
.container input:checked ~ .checkmark:after {
    display: block;
}
    
    /* Style the indicator (dot/circle) */
.container .checkmark:after {
    top: 9px;
    left: 9px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: white;
}